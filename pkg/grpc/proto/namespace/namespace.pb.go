// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/grpc/proto/namespace/namespace.proto

package namespace

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Namespace struct {
	//Name of the cluster in which this namespace to be created
	// +kubebuilder:validation:MinLength=1
	// +kubebuilder:validation:MaxLength=63
	// +kubebuilder:validation:Pattern=^[a-z0-9-]+$
	// +kubebuilder:validation:Required
	ClusterName string `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	//Name of the template to be used to create this namespace
	//This template must be already exists in the manager
	// +optional
	TemplateName string `protobuf:"bytes,2,opt,name=templateName,proto3" json:"templateName,omitempty"`
	//params can be used to pass the values to the underlying template being used
	//If included, it tries to replace it in the template mentioned with exported fields
	// +optional
	Params map[string]string `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// NamespaceResources to be created. If templateName also included in the request,
	//make sure to use this to add "additional resources" only apart from the template
	// DO NOT Provide namespace in the resources section if you already provided the templateName
	// +optional
	NsResources          *NamespaceResources `protobuf:"bytes,4,opt,name=nsResources,proto3" json:"nsResources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1816289be543d89, []int{0}
}

func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (m *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(m, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *Namespace) GetTemplateName() string {
	if m != nil {
		return m.TemplateName
	}
	return ""
}

func (m *Namespace) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Namespace) GetNsResources() *NamespaceResources {
	if m != nil {
		return m.NsResources
	}
	return nil
}

func init() {
	proto.RegisterType((*Namespace)(nil), "namespace.Namespace")
	proto.RegisterMapType((map[string]string)(nil), "namespace.Namespace.ParamsEntry")
}

func init() {
	proto.RegisterFile("pkg/grpc/proto/namespace/namespace.proto", fileDescriptor_f1816289be543d89)
}

var fileDescriptor_f1816289be543d89 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0x87, 0x69, 0xab, 0x0b, 0x9d, 0x78, 0x90, 0xe0, 0xa1, 0x2c, 0x08, 0x61, 0x2f, 0xf6, 0xd4,
	0xc0, 0x8a, 0xb8, 0x7a, 0x11, 0x04, 0xaf, 0x22, 0x3d, 0x7a, 0xcb, 0x86, 0xa1, 0xae, 0x6d, 0x9a,
	0x90, 0x3f, 0xc2, 0x3e, 0x81, 0xaf, 0x2d, 0x1b, 0xdb, 0x6e, 0x05, 0xf7, 0x36, 0xf9, 0xe6, 0xfb,
	0x4d, 0x26, 0x81, 0xd2, 0xb4, 0x0d, 0x6f, 0xac, 0x91, 0xdc, 0x58, 0xed, 0x35, 0xef, 0x85, 0x42,
	0x67, 0x84, 0xc4, 0x63, 0x55, 0xc5, 0x0e, 0xcd, 0x27, 0xb0, 0xbc, 0x39, 0x19, 0xf2, 0xa8, 0x4c,
	0x27, 0xfc, 0x90, 0x59, 0x7d, 0xa7, 0x90, 0xbf, 0x8e, 0x4d, 0xca, 0x80, 0xc8, 0x2e, 0x38, 0x8f,
	0xf6, 0xc0, 0x8a, 0x84, 0x25, 0x65, 0x5e, 0xcf, 0x11, 0x5d, 0xc1, 0xc5, 0x38, 0x21, 0x2a, 0x69,
	0x54, 0xfe, 0x30, 0xba, 0x81, 0x85, 0x11, 0x56, 0x28, 0x57, 0x64, 0x2c, 0x2b, 0xc9, 0x9a, 0x55,
	0xc7, 0x4d, 0xa7, 0xbb, 0xaa, 0xb7, 0xa8, 0xbc, 0xf4, 0xde, 0xee, 0xeb, 0xc1, 0xa7, 0x4f, 0x40,
	0x7a, 0x57, 0xa3, 0xd3, 0xc1, 0x4a, 0x74, 0xc5, 0x19, 0x4b, 0x4a, 0xb2, 0xbe, 0xfe, 0x2f, 0x3e,
	0x49, 0xf5, 0x3c, 0xb1, 0x7c, 0x00, 0x32, 0x9b, 0x4b, 0x2f, 0x21, 0x6b, 0x71, 0x3f, 0xbc, 0xe3,
	0x50, 0xd2, 0x2b, 0x38, 0xff, 0x12, 0x5d, 0x18, 0x17, 0xff, 0x3d, 0x3c, 0xa6, 0x9b, 0xe4, 0xf9,
	0xfe, 0xfd, 0xae, 0xd9, 0xf9, 0x8f, 0xb0, 0xad, 0xa4, 0x56, 0xbc, 0xc5, 0x5d, 0xab, 0x8d, 0xd5,
	0x9f, 0x5c, 0x89, 0x5e, 0x34, 0x68, 0xf9, 0xa9, 0x1f, 0xdd, 0x2e, 0x22, 0xb8, 0xfd, 0x09, 0x00,
	0x00, 0xff, 0xff, 0xe4, 0x34, 0x88, 0xbd, 0xa9, 0x01, 0x00, 0x00,
}
