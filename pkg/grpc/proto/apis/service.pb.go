// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/grpc/proto/apis/service.proto

package apis

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	cluster "github.com/keikoproj/manager/pkg/grpc/proto/cluster"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UnregisterClusterRequest struct {
	ClusterName          string   `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterClusterRequest) Reset()         { *m = UnregisterClusterRequest{} }
func (m *UnregisterClusterRequest) String() string { return proto.CompactTextString(m) }
func (*UnregisterClusterRequest) ProtoMessage()    {}
func (*UnregisterClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_223c4f3164bb6ab0, []int{0}
}

func (m *UnregisterClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterClusterRequest.Unmarshal(m, b)
}
func (m *UnregisterClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterClusterRequest.Marshal(b, m, deterministic)
}
func (m *UnregisterClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterClusterRequest.Merge(m, src)
}
func (m *UnregisterClusterRequest) XXX_Size() int {
	return xxx_messageInfo_UnregisterClusterRequest.Size(m)
}
func (m *UnregisterClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterClusterRequest proto.InternalMessageInfo

func (m *UnregisterClusterRequest) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

type UnregisterClusterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterClusterResponse) Reset()         { *m = UnregisterClusterResponse{} }
func (m *UnregisterClusterResponse) String() string { return proto.CompactTextString(m) }
func (*UnregisterClusterResponse) ProtoMessage()    {}
func (*UnregisterClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_223c4f3164bb6ab0, []int{1}
}

func (m *UnregisterClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterClusterResponse.Unmarshal(m, b)
}
func (m *UnregisterClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterClusterResponse.Marshal(b, m, deterministic)
}
func (m *UnregisterClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterClusterResponse.Merge(m, src)
}
func (m *UnregisterClusterResponse) XXX_Size() int {
	return xxx_messageInfo_UnregisterClusterResponse.Size(m)
}
func (m *UnregisterClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterClusterResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*UnregisterClusterRequest)(nil), "apis.UnregisterClusterRequest")
	proto.RegisterType((*UnregisterClusterResponse)(nil), "apis.UnregisterClusterResponse")
}

func init() {
	proto.RegisterFile("pkg/grpc/proto/apis/service.proto", fileDescriptor_223c4f3164bb6ab0)
}

var fileDescriptor_223c4f3164bb6ab0 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2c, 0xc8, 0x4e, 0xd7,
	0x4f, 0x2f, 0x2a, 0x48, 0xd6, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0x2c, 0xc8, 0x2c, 0xd6,
	0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x03, 0x0b, 0x09, 0xb1, 0x80, 0xc4, 0xa4, 0x54,
	0xd0, 0x14, 0x26, 0xe7, 0x94, 0x16, 0x97, 0xa4, 0x16, 0xc1, 0x68, 0x88, 0x5a, 0x25, 0x1b, 0x2e,
	0x89, 0xd0, 0xbc, 0xa2, 0xd4, 0xf4, 0x4c, 0x90, 0x98, 0x33, 0x44, 0x2a, 0x28, 0xb5, 0xb0, 0x34,
	0xb5, 0xb8, 0x44, 0x48, 0x81, 0x8b, 0x1b, 0xaa, 0xd8, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x51, 0x81,
	0x51, 0x83, 0x33, 0x08, 0x59, 0x48, 0x49, 0x9a, 0x4b, 0x12, 0x8b, 0xee, 0xe2, 0x82, 0xfc, 0xbc,
	0xe2, 0x54, 0xa3, 0x85, 0x8c, 0x5c, 0x7c, 0x50, 0xb1, 0x60, 0x88, 0xfb, 0x84, 0xcc, 0xb9, 0xf8,
	0x83, 0x50, 0x55, 0x0b, 0x09, 0xe8, 0xc1, 0x1c, 0x04, 0x15, 0x91, 0xc2, 0x10, 0x51, 0x62, 0x10,
	0x0a, 0xe3, 0x12, 0xc4, 0xb0, 0x48, 0x48, 0x4e, 0x0f, 0xe4, 0x51, 0x3d, 0x5c, 0xee, 0x97, 0x92,
	0xc7, 0x29, 0x0f, 0x71, 0xa1, 0x12, 0x83, 0x93, 0x4e, 0x94, 0x56, 0x7a, 0x66, 0x49, 0x46, 0x69,
	0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x76, 0x6a, 0x66, 0x76, 0x7e, 0x41, 0x51, 0x7e, 0x96, 0x7e,
	0x6e, 0x62, 0x5e, 0x62, 0x7a, 0x6a, 0x91, 0x3e, 0x3c, 0x0c, 0x41, 0x26, 0x25, 0xb1, 0x81, 0xc3,
	0xcc, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x04, 0x7e, 0x86, 0x7d, 0x84, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClusterServiceClient is the client API for ClusterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterServiceClient interface {
	RegisterCluster(ctx context.Context, in *cluster.Cluster, opts ...grpc.CallOption) (*cluster.Cluster, error)
	UnregisterCluster(ctx context.Context, in *UnregisterClusterRequest, opts ...grpc.CallOption) (*UnregisterClusterResponse, error)
}

type clusterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClusterServiceClient(cc grpc.ClientConnInterface) ClusterServiceClient {
	return &clusterServiceClient{cc}
}

func (c *clusterServiceClient) RegisterCluster(ctx context.Context, in *cluster.Cluster, opts ...grpc.CallOption) (*cluster.Cluster, error) {
	out := new(cluster.Cluster)
	err := c.cc.Invoke(ctx, "/apis.ClusterService/RegisterCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterServiceClient) UnregisterCluster(ctx context.Context, in *UnregisterClusterRequest, opts ...grpc.CallOption) (*UnregisterClusterResponse, error) {
	out := new(UnregisterClusterResponse)
	err := c.cc.Invoke(ctx, "/apis.ClusterService/UnregisterCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterServiceServer is the server API for ClusterService service.
type ClusterServiceServer interface {
	RegisterCluster(context.Context, *cluster.Cluster) (*cluster.Cluster, error)
	UnregisterCluster(context.Context, *UnregisterClusterRequest) (*UnregisterClusterResponse, error)
}

// UnimplementedClusterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClusterServiceServer struct {
}

func (*UnimplementedClusterServiceServer) RegisterCluster(ctx context.Context, req *cluster.Cluster) (*cluster.Cluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterCluster not implemented")
}
func (*UnimplementedClusterServiceServer) UnregisterCluster(ctx context.Context, req *UnregisterClusterRequest) (*UnregisterClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnregisterCluster not implemented")
}

func RegisterClusterServiceServer(s *grpc.Server, srv ClusterServiceServer) {
	s.RegisterService(&_ClusterService_serviceDesc, srv)
}

func _ClusterService_RegisterCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(cluster.Cluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).RegisterCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apis.ClusterService/RegisterCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).RegisterCluster(ctx, req.(*cluster.Cluster))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterService_UnregisterCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).UnregisterCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apis.ClusterService/UnregisterCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).UnregisterCluster(ctx, req.(*UnregisterClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apis.ClusterService",
	HandlerType: (*ClusterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterCluster",
			Handler:    _ClusterService_RegisterCluster_Handler,
		},
		{
			MethodName: "UnregisterCluster",
			Handler:    _ClusterService_UnregisterCluster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/grpc/proto/apis/service.proto",
}
